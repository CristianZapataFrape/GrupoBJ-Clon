// <auto-generated />
using System;
using GrupoBJ.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GrupoBJ.Migrations
{
    [DbContext(typeof(GrupoBJDBContext))]
    [Migration("20210304195845_eliminacion_area2")]
    partial class eliminacion_area2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Opcion", b =>
                {
                    b.Property<int>("idOpcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Controlador")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("Posicion")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkSistema")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkTipoArchivo")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<int>("idOpcionPadre")
                        .HasColumnType("int");

                    b.Property<string>("nombrePadre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("tipoSistema")
                        .HasColumnType("int");

                    b.HasKey("idOpcion");

                    b.HasIndex("fkSistema");

                    b.HasIndex("fkTipoArchivo");

                    b.ToTable("Acceso_Opcion");
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Opcion_Permiso", b =>
                {
                    b.Property<int>("idOpcionPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkOpcion")
                        .HasColumnType("int");

                    b.Property<int?>("fkPermiso")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idOpcionPermiso");

                    b.HasIndex("fkOpcion");

                    b.HasIndex("fkPermiso");

                    b.ToTable("Acceso_Opcion_Permiso");
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Perfil", b =>
                {
                    b.Property<int>("idPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkSistema")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idPerfil");

                    b.HasIndex("fkSistema");

                    b.ToTable("Acceso_Perfil");
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Permiso", b =>
                {
                    b.Property<int>("idPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idPermiso");

                    b.ToTable("Acceso_Permiso");
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Permiso_Perfil_Opcion", b =>
                {
                    b.Property<int>("idPermisoPerfilOpcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkOpcion")
                        .HasColumnType("int");

                    b.Property<int?>("fkOpcionPermiso")
                        .HasColumnType("int");

                    b.Property<int?>("fkPerfil")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idPermisoPerfilOpcion");

                    b.HasIndex("fkOpcion");

                    b.HasIndex("fkOpcionPermiso");

                    b.HasIndex("fkPerfil");

                    b.ToTable("Acceso_Permiso_Perfil_Opcion");
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Sistema", b =>
                {
                    b.Property<int>("idSistema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkEmpresa")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idSistema");

                    b.HasIndex("fkEmpresa");

                    b.ToTable("Acceso_Sistema");
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Tipo_Archivo", b =>
                {
                    b.Property<int>("idTipoArchivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idTipoArchivo");

                    b.ToTable("Acceso_Tipo_Archivo");
                });

            modelBuilder.Entity("GrupoBJ.Models.Articulos", b =>
                {
                    b.Property<int>("id_Articulos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<double>("Costo_Estandar")
                        .HasColumnType("float");

                    b.Property<string>("Nombre_Articulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("Producto_Venta")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<string>("id_Articulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("id_Articulos");

                    b.HasIndex("fkUsuarioUm");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("GrupoBJ.Models.Articulos_Campos", b =>
                {
                    b.Property<int>("idArticulos_Campos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre_Articulo_Campos")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idArticulos_Campos");

                    b.ToTable("Articulos_Campos");
                });

            modelBuilder.Entity("GrupoBJ.Models.Articulos_Carateristicas", b =>
                {
                    b.Property<int>("id_Articulos_Carateristicas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<int>("id_Articulos")
                        .HasColumnType("int");

                    b.Property<int>("id_Cararteristica")
                        .HasColumnType("int");

                    b.Property<int>("id_Carateristica_Valores")
                        .HasColumnType("int");

                    b.HasKey("id_Articulos_Carateristicas");

                    b.HasIndex("id_Articulos");

                    b.HasIndex("id_Cararteristica");

                    b.HasIndex("id_Carateristica_Valores");

                    b.ToTable("Articulos_Carateristicas");
                });

            modelBuilder.Entity("GrupoBJ.Models.Articulos_Nutrimental", b =>
                {
                    b.Property<int>("id_Articulos_Nutrimental")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caracteristicas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Presentacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<int>("id_Articulos")
                        .HasColumnType("int");

                    b.Property<int>("id_Tabla_Nutrimental")
                        .HasColumnType("int");

                    b.HasKey("id_Articulos_Nutrimental");

                    b.HasIndex("id_Articulos");

                    b.HasIndex("id_Tabla_Nutrimental");

                    b.ToTable("Articulos_Nutrimental");
                });

            modelBuilder.Entity("GrupoBJ.Models.Articulos_Valores", b =>
                {
                    b.Property<int>("idArticulos_Valores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<int>("idArticulos_Campos")
                        .HasColumnType("int");

                    b.Property<int>("id_Articulos")
                        .HasColumnType("int");

                    b.HasKey("idArticulos_Valores");

                    b.HasIndex("idArticulos_Campos");

                    b.HasIndex("id_Articulos");

                    b.ToTable("Articulos_Valores");
                });

            modelBuilder.Entity("GrupoBJ.Models.Banco", b =>
                {
                    b.Property<int>("idBanco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<bool?>("esBancoExtranjero")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<string>("paginaWeb")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("idBanco");

                    b.ToTable("Banco");
                });

            modelBuilder.Entity("GrupoBJ.Models.Carateristicas", b =>
                {
                    b.Property<int>("id_Cararteristica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre_Carateristica")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("id_Cararteristica");

                    b.HasIndex("fkUsuarioUm");

                    b.ToTable("Carateristicas");
                });

            modelBuilder.Entity("GrupoBJ.Models.Carateristicas_Valores", b =>
                {
                    b.Property<int>("id_Carateristica_Valores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<bool>("Venta")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<int>("id_Cararteristica")
                        .HasColumnType("int");

                    b.HasKey("id_Carateristica_Valores");

                    b.HasIndex("id_Cararteristica");

                    b.ToTable("Carateristica_Valores");
                });

            modelBuilder.Entity("GrupoBJ.Models.Ciudad", b =>
                {
                    b.Property<int>("idCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkEstado")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idCiudad");

                    b.HasIndex("fkEstado");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("GrupoBJ.Models.Codido_Barra_Valores", b =>
                {
                    b.Property<int>("id_Codido_Barra_Valores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("id_Articulos")
                        .HasColumnType("int");

                    b.Property<int>("id_Codigo_Barra")
                        .HasColumnType("int");

                    b.HasKey("id_Codido_Barra_Valores");

                    b.HasIndex("id_Articulos");

                    b.HasIndex("id_Codigo_Barra");

                    b.ToTable("Codido_Barra_Valores");
                });

            modelBuilder.Entity("GrupoBJ.Models.Codigo_Barra", b =>
                {
                    b.Property<int>("id_Codigo_Barra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre_Codigo_Barra")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("id_Codigo_Barra");

                    b.ToTable("Codigo_Barra");
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.ConceptosIETU", b =>
                {
                    b.Property<int>("idConceptoIETU")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkTipoFlujo")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkTipoIETU")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkTipoIVA")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idConceptoIETU");

                    b.HasIndex("fkTipoFlujo");

                    b.HasIndex("fkTipoIETU");

                    b.HasIndex("fkTipoIVA");

                    b.ToTable("ConceptosIETU");
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.NIF_Nivel", b =>
                {
                    b.Property<int>("idNIFNivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idNIFNivel");

                    b.ToTable("NIF_Nivel");
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.NIF_Tipo", b =>
                {
                    b.Property<int>("idNIFTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idNIFTipo");

                    b.ToTable("NIF_Tipo");
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.Rubros_NIF", b =>
                {
                    b.Property<int>("idRubroNIF")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkNIFNivel")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkNIFTipo")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idRubroNIF");

                    b.HasIndex("fkNIFNivel");

                    b.HasIndex("fkNIFTipo");

                    b.ToTable("Rubros_NIF");
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU", b =>
                {
                    b.Property<int>("idTipoConceptoIETU")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idTipoConceptoIETU");

                    b.ToTable("Tipo_ConceptosIETU");
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU_IETU", b =>
                {
                    b.Property<int>("idTipoConceptoIETU_IETU")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkTipoConceptoIETU")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idTipoConceptoIETU_IETU");

                    b.HasIndex("fkTipoConceptoIETU");

                    b.ToTable("Tipo_ConceptosIETU_IETU");
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU_IVA", b =>
                {
                    b.Property<int>("idTipoConceptoIETU_IVA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkTipoConceptoIETU")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idTipoConceptoIETU_IVA");

                    b.HasIndex("fkTipoConceptoIETU");

                    b.ToTable("Tipo_ConceptosIETU_IVA");
                });

            modelBuilder.Entity("GrupoBJ.Models.Departamento", b =>
                {
                    b.Property<int>("idDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkEmpresa")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idDepartamento");

                    b.HasIndex("fkEmpresa");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("GrupoBJ.Models.Empleado", b =>
                {
                    b.Property<int>("idEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Cardinalidad")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Fotografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("IMSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool?>("afectado")
                        .HasColumnType("bit");

                    b.Property<bool?>("afectadoExtraordinario")
                        .HasColumnType("bit");

                    b.Property<double>("ajusteAlNeto")
                        .HasColumnType("float");

                    b.Property<bool?>("altaImss")
                        .HasColumnType("bit");

                    b.Property<string>("apMaterno")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("apPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("bajaImss")
                        .HasColumnType("bit");

                    b.Property<string>("baseCotizacionImss")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("basePago")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool?>("calculado")
                        .HasColumnType("bit");

                    b.Property<bool?>("calculadoExtraordinario")
                        .HasColumnType("bit");

                    b.Property<bool?>("calculoAguinaldo")
                        .HasColumnType("bit");

                    b.Property<bool?>("calculoptu")
                        .HasColumnType("bit");

                    b.Property<bool?>("cambioCotizacionImss")
                        .HasColumnType("bit");

                    b.Property<string>("causaBaja")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("centroCosto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("clabeInterbancaria")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("codigoEmpleado")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("codigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("correoElectronico")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("cuentaBancaria")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<double>("diasPrimaVacTomadasAntesDeAlta")
                        .HasColumnType("float");

                    b.Property<double>("diasVacacionesTomadasAntesDeAlta")
                        .HasColumnType("float");

                    b.Property<string>("estadoEmpleado")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("estadoEmpleadoPeriodo")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<bool?>("extranjeroSinCurp")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaNacimiento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSueldoDiario")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSueldoIntegrado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSueldoMixto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSueldoPromedio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSueldoVariable")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkBanco")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkCiudad")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkDepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("fkEstadoCivil")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkPuesto")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkRegistroPatronal")
                        .HasColumnType("int");

                    b.Property<int?>("fkSucursal")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkTipoPeriodo")
                        .HasColumnType("int");

                    b.Property<int?>("fkTurno")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<string>("formaPago")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("iut")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("lugarNacimiento")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<bool?>("modificacionSalarioImss")
                        .HasColumnType("bit");

                    b.Property<string>("nombreMadre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("nombrePadre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("numeroAfore")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("numeroExterior")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("numeroFonacot")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("numeroInterior")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<double>("porcentajePensionAlimenticia")
                        .HasColumnType("float");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool?>("subcontratacion")
                        .HasColumnType("bit");

                    b.Property<string>("sucursalBanco")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<double>("sueldoBaseLiquidacion")
                        .HasColumnType("float");

                    b.Property<double?>("sueldoDiario")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double>("sueldoIntegrado")
                        .HasColumnType("float");

                    b.Property<double>("sueldoMixto")
                        .HasColumnType("float");

                    b.Property<double>("sueldoNetoMensual")
                        .HasColumnType("float");

                    b.Property<double>("sueldoPromedio")
                        .HasColumnType("float");

                    b.Property<double>("sueldoVariable")
                        .HasColumnType("float");

                    b.Property<string>("tipoContrato")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("tipoEmpleado")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("tipoPrestacion")
                        .HasColumnType("int");

                    b.Property<string>("tipoRegimen")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("umf")
                        .HasColumnType("int");

                    b.Property<string>("zonaSalario")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("idEmpleado");

                    b.HasIndex("fkDepartamento");

                    b.HasIndex("fkPuesto");

                    b.HasIndex("fkRegistroPatronal");

                    b.HasIndex("fkSucursal");

                    b.HasIndex("fkTipoPeriodo");

                    b.HasIndex("fkTurno");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("GrupoBJ.Models.Empresa", b =>
                {
                    b.Property<int>("idEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Cardinalidad")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("codigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkCiudad")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkMoneda")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<string>("numeroExterior")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("numeroInterior")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("razonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("idEmpresa");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("GrupoBJ.Models.Estado", b =>
                {
                    b.Property<int>("idEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkPais")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idEstado");

                    b.HasIndex("fkPais");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("GrupoBJ.Models.Estado_Civil", b =>
                {
                    b.Property<int>("idEstadoCivil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idEstadoCivil");

                    b.ToTable("Estado_Civil");
                });

            modelBuilder.Entity("GrupoBJ.Models.Moneda", b =>
                {
                    b.Property<int>("idMoneda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Decimales")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Posicion")
                        .HasColumnType("int");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkMonedaSAT")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<string>("nombrePlural")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("nombreSingular")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("textoFinal")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("idMoneda");

                    b.HasIndex("fkMonedaSAT");

                    b.ToTable("Moneda");
                });

            modelBuilder.Entity("GrupoBJ.Models.MonedaSAT", b =>
                {
                    b.Property<int>("idMonedaSAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idMonedaSAT");

                    b.ToTable("MonedaSAT");
                });

            modelBuilder.Entity("GrupoBJ.Models.Nominas.Nom_FraccionesImss", b =>
                {
                    b.Property<int>("idFraccionesImss")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("idFraccionesImss");

                    b.ToTable("Nom_FraccionesImss");
                });

            modelBuilder.Entity("GrupoBJ.Models.Nominas.Nom_Periodo", b =>
                {
                    b.Property<int>("idPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<bool?>("afectado")
                        .HasColumnType("bit");

                    b.Property<bool?>("calculado")
                        .HasColumnType("bit");

                    b.Property<float>("diasPago")
                        .HasColumnType("real");

                    b.Property<int>("ejercicio")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("finBimestreImss")
                        .HasColumnType("bit");

                    b.Property<bool?>("finEjercicio")
                        .HasColumnType("bit");

                    b.Property<bool?>("finMes")
                        .HasColumnType("bit");

                    b.Property<int?>("fkTipoPeriodo")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<bool?>("inicioBimestreImss")
                        .HasColumnType("bit");

                    b.Property<bool?>("inicioEjercicio")
                        .HasColumnType("bit");

                    b.Property<bool?>("inicioMes")
                        .HasColumnType("bit");

                    b.Property<int>("mes")
                        .HasColumnType("int");

                    b.Property<int>("numeroPeriodo")
                        .HasColumnType("int");

                    b.Property<float>("septimos")
                        .HasColumnType("real");

                    b.HasKey("idPeriodo");

                    b.HasIndex("fkTipoPeriodo");

                    b.ToTable("Nom_Periodo");
                });

            modelBuilder.Entity("GrupoBJ.Models.Nominas.Nom_RegistroPatronal", b =>
                {
                    b.Property<int>("idRegistroPatronal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int>("claseRiesgoTrabajo")
                        .HasColumnType("int");

                    b.Property<int>("codigoPostal")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaConstitucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkCiudadRegistroPatronal")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<int>("fraccionRiesgoTrabajo")
                        .HasColumnType("int");

                    b.Property<string>("registroImss")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("rfc")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.HasKey("idRegistroPatronal");

                    b.HasIndex("fkCiudadRegistroPatronal");

                    b.ToTable("Nom_RegistroPatronal");
                });

            modelBuilder.Entity("GrupoBJ.Models.Nominas.Nom_TipoPeriodo", b =>
                {
                    b.Property<int>("idTipoPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<bool?>("ajustarCalendario")
                        .HasColumnType("bit");

                    b.Property<bool?>("ajustarMesCalendario")
                        .HasColumnType("bit");

                    b.Property<int>("diaPago")
                        .HasColumnType("int");

                    b.Property<int>("diasPeriodo")
                        .HasColumnType("int");

                    b.Property<int>("ejercicio")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkPeriodoActual")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("periocidad")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("posicionPago")
                        .HasColumnType("int");

                    b.Property<int>("posicionSeptimos")
                        .HasColumnType("int");

                    b.Property<int>("septimosDias")
                        .HasColumnType("int");

                    b.HasKey("idTipoPeriodo");

                    b.HasIndex("fkPeriodoActual");

                    b.ToTable("Nom_TipoPeriodo");
                });

            modelBuilder.Entity("GrupoBJ.Models.Nominas.Turnos", b =>
                {
                    b.Property<int>("idTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<float>("horas")
                        .HasColumnType("real");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int>("numeroTurno")
                        .HasColumnType("int");

                    b.Property<string>("tipoJornadas")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("idTurno");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("GrupoBJ.Models.Pais", b =>
                {
                    b.Property<int>("idPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idPais");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("GrupoBJ.Models.Puesto", b =>
                {
                    b.Property<int>("idPuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkDepartamento")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idPuesto");

                    b.HasIndex("fkDepartamento");

                    b.ToTable("Puesto");
                });

            modelBuilder.Entity("GrupoBJ.Models.Sucursal", b =>
                {
                    b.Property<int>("idSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Cardinalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("codigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkCiudad")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("fkEmpresa")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<string>("numeroExterior")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("numeroInterior")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("idSucursal");

                    b.HasIndex("fkEmpresa");

                    b.ToTable("Sucursal");
                });

            modelBuilder.Entity("GrupoBJ.Models.Tabla_Nutrimental", b =>
                {
                    b.Property<int>("id_Tabla_Nutrimental")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre_Tabla_Nutrimental")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<int>("id_Carateristica_Valores")
                        .HasColumnType("int");

                    b.HasKey("id_Tabla_Nutrimental");

                    b.HasIndex("id_Carateristica_Valores");

                    b.ToTable("Tabla_Nutrimental");
                });

            modelBuilder.Entity("GrupoBJ.Models.Tabla_Nutrimental_Campos", b =>
                {
                    b.Property<int>("id_Tabla_Nutrimental_Campos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre_Tabla_Nutrimental_Campos")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<int>("id_Tabla_Nutrimental")
                        .HasColumnType("int");

                    b.HasKey("id_Tabla_Nutrimental_Campos");

                    b.HasIndex("id_Tabla_Nutrimental");

                    b.ToTable("Tabla_Nutrimental_Campos");
                });

            modelBuilder.Entity("GrupoBJ.Models.Tabla_Nutrimental_Valores", b =>
                {
                    b.Property<int>("id_Tabla_Nutrimental_Valores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<int>("id_Articulos_Nutrimental")
                        .HasColumnType("int");

                    b.Property<int>("id_Tabla_Nutrimental_Campos")
                        .HasColumnType("int");

                    b.HasKey("id_Tabla_Nutrimental_Valores");

                    b.HasIndex("id_Articulos_Nutrimental");

                    b.HasIndex("id_Tabla_Nutrimental_Campos");

                    b.ToTable("Tabla_Nutrimental_Valores");
                });

            modelBuilder.Entity("GrupoBJ.Models.Unidades_Medida", b =>
                {
                    b.Property<int>("id_Unidades_Medida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Nombre_Unidad_Medida")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("id_Unidades_Medida");

                    b.ToTable("Unidades_Medida");
                });

            modelBuilder.Entity("GrupoBJ.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("correoElectronico")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("fechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.Property<string>("imagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("menuProduccion")
                        .HasColumnType("bit");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("nuncaCaduca")
                        .HasColumnType("bit");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GrupoBJ.Models.Usuario_Empresa_Sucursal_Sis_Per", b =>
                {
                    b.Property<int>("idUsuEmpSucSisPer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("fkPerfil")
                        .HasColumnType("int");

                    b.Property<int?>("fkSistema")
                        .HasColumnType("int");

                    b.Property<int?>("fkSucursal")
                        .HasColumnType("int");

                    b.Property<int?>("fkUsuario")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idUsuEmpSucSisPer");

                    b.HasIndex("fkEmpresa");

                    b.HasIndex("fkPerfil");

                    b.HasIndex("fkSistema");

                    b.HasIndex("fkSucursal");

                    b.HasIndex("fkUsuario");

                    b.ToTable("Usuario_Empresa_Sucursal_Sis_Per");
                });

            modelBuilder.Entity("GrupoBJ.Models.Usuario_Tabla_Columna", b =>
                {
                    b.Property<int>("idUsuarioTablaColumna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Ancho")
                        .HasColumnType("int");

                    b.Property<string>("Columna")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Tabla")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Visibilidad")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaUm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fkUsuario")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioCr")
                        .HasColumnType("int");

                    b.Property<int>("fkUsuarioUm")
                        .HasColumnType("int");

                    b.HasKey("idUsuarioTablaColumna");

                    b.HasIndex("fkUsuario");

                    b.ToTable("Usuario_Tabla_Columna");
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Opcion", b =>
                {
                    b.HasOne("GrupoBJ.Models.Acceso_Sistema", "Acceso_Sistema")
                        .WithMany()
                        .HasForeignKey("fkSistema")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Acceso_Tipo_Archivo", "Acceso_Tipo_Archivo")
                        .WithMany()
                        .HasForeignKey("fkTipoArchivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Opcion_Permiso", b =>
                {
                    b.HasOne("GrupoBJ.Models.Acceso_Opcion", "Acceso_Opcion")
                        .WithMany()
                        .HasForeignKey("fkOpcion");

                    b.HasOne("GrupoBJ.Models.Acceso_Permiso", "Acceso_Permiso")
                        .WithMany()
                        .HasForeignKey("fkPermiso");
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Perfil", b =>
                {
                    b.HasOne("GrupoBJ.Models.Acceso_Sistema", "Acceso_Sistema")
                        .WithMany()
                        .HasForeignKey("fkSistema")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Permiso_Perfil_Opcion", b =>
                {
                    b.HasOne("GrupoBJ.Models.Acceso_Opcion", "Acceso_Opcion")
                        .WithMany()
                        .HasForeignKey("fkOpcion");

                    b.HasOne("GrupoBJ.Models.Acceso_Opcion_Permiso", "Acceso_Opcion_Permiso")
                        .WithMany()
                        .HasForeignKey("fkOpcionPermiso");

                    b.HasOne("GrupoBJ.Models.Acceso_Perfil", "Acceso_Perfil")
                        .WithMany()
                        .HasForeignKey("fkPerfil");
                });

            modelBuilder.Entity("GrupoBJ.Models.Acceso_Sistema", b =>
                {
                    b.HasOne("GrupoBJ.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("fkEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Articulos", b =>
                {
                    b.HasOne("GrupoBJ.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("fkUsuarioUm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Articulos_Carateristicas", b =>
                {
                    b.HasOne("GrupoBJ.Models.Articulos", "Articulos")
                        .WithMany()
                        .HasForeignKey("id_Articulos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Carateristicas", "Carateristicas")
                        .WithMany()
                        .HasForeignKey("id_Cararteristica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Carateristicas_Valores", "Carateristica_Valores")
                        .WithMany()
                        .HasForeignKey("id_Carateristica_Valores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Articulos_Nutrimental", b =>
                {
                    b.HasOne("GrupoBJ.Models.Articulos", "Articulos")
                        .WithMany()
                        .HasForeignKey("id_Articulos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Tabla_Nutrimental", "Tabla_Nutrimental")
                        .WithMany()
                        .HasForeignKey("id_Tabla_Nutrimental")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Articulos_Valores", b =>
                {
                    b.HasOne("GrupoBJ.Models.Articulos_Campos", "Articulos_Campos")
                        .WithMany()
                        .HasForeignKey("idArticulos_Campos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Articulos", "Articulos")
                        .WithMany()
                        .HasForeignKey("id_Articulos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Carateristicas", b =>
                {
                    b.HasOne("GrupoBJ.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("fkUsuarioUm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Carateristicas_Valores", b =>
                {
                    b.HasOne("GrupoBJ.Models.Carateristicas", "Carateristicas")
                        .WithMany()
                        .HasForeignKey("id_Cararteristica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Ciudad", b =>
                {
                    b.HasOne("GrupoBJ.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("fkEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Codido_Barra_Valores", b =>
                {
                    b.HasOne("GrupoBJ.Models.Articulos", "Articulos")
                        .WithMany()
                        .HasForeignKey("id_Articulos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Codigo_Barra", "Codigo_Barra")
                        .WithMany()
                        .HasForeignKey("id_Codigo_Barra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.ConceptosIETU", b =>
                {
                    b.HasOne("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU", "Tipo_ConceptosIETU")
                        .WithMany()
                        .HasForeignKey("fkTipoFlujo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU_IETU", "Tipo_ConceptosIETU_IETU")
                        .WithMany()
                        .HasForeignKey("fkTipoIETU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU_IVA", "Tipo_ConceptosIETU_IVA")
                        .WithMany()
                        .HasForeignKey("fkTipoIVA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.Rubros_NIF", b =>
                {
                    b.HasOne("GrupoBJ.Models.Contabilidad.NIF_Nivel", "NIF_Nivel")
                        .WithMany()
                        .HasForeignKey("fkNIFNivel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Contabilidad.NIF_Tipo", "NIF_Tipo")
                        .WithMany()
                        .HasForeignKey("fkNIFTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU_IETU", b =>
                {
                    b.HasOne("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU", "Tipo_ConceptosIETU")
                        .WithMany()
                        .HasForeignKey("fkTipoConceptoIETU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU_IVA", b =>
                {
                    b.HasOne("GrupoBJ.Models.Contabilidad.Tipo_ConceptosIETU", "Tipo_ConceptosIETU")
                        .WithMany()
                        .HasForeignKey("fkTipoConceptoIETU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Departamento", b =>
                {
                    b.HasOne("GrupoBJ.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("fkEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Empleado", b =>
                {
                    b.HasOne("GrupoBJ.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("fkDepartamento");

                    b.HasOne("GrupoBJ.Models.Puesto", "Puesto")
                        .WithMany()
                        .HasForeignKey("fkPuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Nominas.Nom_RegistroPatronal", "RegistroPatronal")
                        .WithMany()
                        .HasForeignKey("fkRegistroPatronal");

                    b.HasOne("GrupoBJ.Models.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("fkSucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Nominas.Nom_TipoPeriodo", "Nom_TipoPeriodo")
                        .WithMany()
                        .HasForeignKey("fkTipoPeriodo");

                    b.HasOne("GrupoBJ.Models.Nominas.Turnos", "Turnos")
                        .WithMany()
                        .HasForeignKey("fkTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Estado", b =>
                {
                    b.HasOne("GrupoBJ.Models.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("fkPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Moneda", b =>
                {
                    b.HasOne("GrupoBJ.Models.MonedaSAT", "MonedaSAT")
                        .WithMany()
                        .HasForeignKey("fkMonedaSAT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Nominas.Nom_Periodo", b =>
                {
                    b.HasOne("GrupoBJ.Models.Nominas.Nom_TipoPeriodo", "Nom_TipoPeriodo")
                        .WithMany()
                        .HasForeignKey("fkTipoPeriodo");
                });

            modelBuilder.Entity("GrupoBJ.Models.Nominas.Nom_RegistroPatronal", b =>
                {
                    b.HasOne("GrupoBJ.Models.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("fkCiudadRegistroPatronal");
                });

            modelBuilder.Entity("GrupoBJ.Models.Nominas.Nom_TipoPeriodo", b =>
                {
                    b.HasOne("GrupoBJ.Models.Nominas.Nom_Periodo", "Nom_Periodo")
                        .WithMany()
                        .HasForeignKey("fkPeriodoActual");
                });

            modelBuilder.Entity("GrupoBJ.Models.Puesto", b =>
                {
                    b.HasOne("GrupoBJ.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("fkDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Sucursal", b =>
                {
                    b.HasOne("GrupoBJ.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("fkEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Tabla_Nutrimental", b =>
                {
                    b.HasOne("GrupoBJ.Models.Carateristicas_Valores", "Carateristica_Valores")
                        .WithMany()
                        .HasForeignKey("id_Carateristica_Valores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Tabla_Nutrimental_Campos", b =>
                {
                    b.HasOne("GrupoBJ.Models.Tabla_Nutrimental", "Tabla_Nutrimental")
                        .WithMany()
                        .HasForeignKey("id_Tabla_Nutrimental")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Tabla_Nutrimental_Valores", b =>
                {
                    b.HasOne("GrupoBJ.Models.Articulos_Nutrimental", "Articulos_Nutrimental")
                        .WithMany()
                        .HasForeignKey("id_Articulos_Nutrimental")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoBJ.Models.Tabla_Nutrimental_Campos", "Tabla_Nutrimental_Campos")
                        .WithMany()
                        .HasForeignKey("id_Tabla_Nutrimental_Campos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrupoBJ.Models.Usuario_Empresa_Sucursal_Sis_Per", b =>
                {
                    b.HasOne("GrupoBJ.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("fkEmpresa");

                    b.HasOne("GrupoBJ.Models.Acceso_Perfil", "Acceso_Perfil")
                        .WithMany()
                        .HasForeignKey("fkPerfil");

                    b.HasOne("GrupoBJ.Models.Acceso_Sistema", "Acceso_Sistema")
                        .WithMany()
                        .HasForeignKey("fkSistema");

                    b.HasOne("GrupoBJ.Models.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("fkSucursal");

                    b.HasOne("GrupoBJ.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("fkUsuario");
                });

            modelBuilder.Entity("GrupoBJ.Models.Usuario_Tabla_Columna", b =>
                {
                    b.HasOne("GrupoBJ.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("fkUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
